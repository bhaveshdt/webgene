<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_ID" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>familytree</display-name>

	<!-- Index Page -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- Bootstrap the root application context as usual using ContextLoaderListener -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext 
		instead of the default XmlWebApplicationContext -->
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>
          org.springframework.web.context.support.AnnotationConfigWebApplicationContext
      </param-value>
	</context-param>

	<!-- Configuration locations must consist of one or more comma- or space-delimited 
		fully-qualified @Configuration classes. Fully-qualified packages may also 
		be specified for component-scanning -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>com.delrima.webgene.server.configuration.ContainerConfiguration</param-value>
	</context-param>

	<!-- GWT RPC Configuration -->
	<servlet>
		<servlet-name>rpc-dispatcher</servlet-name>
		<servlet-class>com.delrima.webgene.server.servlet.ActionHandlerServiceServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>rpc-dispatcher</servlet-name>
		<url-pattern>/com.delrima.webgene.WebGeneModuleEntry/action.rpc</url-pattern>
	</servlet-mapping>

	<!-- Log4j Configuration -->
	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>webgene.root</param-value>
	</context-param>

	<!-- Enable remote API on Java. -->
	<servlet>
		<servlet-name>remoteapi</servlet-name>
		<servlet-class>com.google.apphosting.utils.remoteapi.RemoteApiServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>remoteapi</servlet-name>
		<url-pattern>/remote_api</url-pattern>
	</servlet-mapping>
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>remoteapi</web-resource-name>
			<url-pattern>/remote_api</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>

	<!-- Pages served via https -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>allPagesHttps</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<user-data-constraint>
			<transport-guarantee>CONFIDENTIAL</transport-guarantee>
		</user-data-constraint>
	</security-constraint>

	<!-- Pages require Google sign-in -->
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>allPagesRequireGoogleSignIn</web-resource-name>
			<url-pattern>/*</url-pattern>
		</web-resource-collection>
		<auth-constraint>
			<role-name>admin</role-name>
		</auth-constraint>
	</security-constraint>
</web-app>
